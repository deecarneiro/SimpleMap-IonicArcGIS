{"version":3,"sources":["./node_modules/@arcgis/core/layers/graphics/editingSupport.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAC+Y,cAAc,QAAQ,gJAAgJ,0BAA0B,QAAQ,SAAS,eAAe,oEAAC,UAAU,QAAQ,IAAI,wBAAwB,IAAI,MAAM,kBAAkB,+BAA+B,+BAA+B,6BAA6B,WAAW,oEAAC,KAAK,sDAAC,IAAI,OAAO,kFAAkF,QAAQ,GAAG,+BAA+B,sDAAC,IAAI,OAAO,0DAA0D,QAAQ,EAAE,8BAA8B,iIAAiI,wBAAwB,sDAAC,IAAI,OAAO,oKAAoK,+DAA+D,sDAAC,IAAI,OAAO,wIAAwI,8FAA8F,sDAAC,IAAI,OAAO,qJAAqJ,yEAAyE,sDAAC,IAAI,OAAO,gIAAgI,yDAAyD,sDAAC,IAAI,OAAO,8LAA8L,sCAAsC,sDAAC,IAAI,OAAO,gJAAgJ,SAAS,MAAM,oBAAoB,2DAAC,2FAA2F,2DAAC,oGAAoG,2DAAC,uJAAuJ,sDAAC,IAAI,OAAO,yEAAyE,gFAAgF,sDAAC,IAAI,OAAO,2EAA2E,gFAAgF,sDAAC,IAAI,OAAO,2EAA2E,0MAA0M,0BAA0B,6NAA6N,oFAAoF,oGAAC,0BAA0B,qCAAqC,4BAA4B,mCAAmC,+BAA+B,KAAK,IAAI,QAAQ,qKAAqK,iBAAiB,qJAAqJ,OAAO,yCAAyC,2CAA2C,mDAAC,KAAK,6QAA6Q,kMAAkM,SAAS,cAAc,kBAAkB,MAAM,8DAA8D,sDAAC,IAAI,OAAO,wFAAwF,8CAA8C,sDAAC,IAAI,OAAO,oGAAoG,mBAAmB,6DAAC,cAAc,iEAAiE,sDAAC,IAAI,OAAO,qFAAqF,iEAAiE,sDAAC,IAAI,OAAO,sFAAsF,gBAAgB,MAAM,uBAAuB,GAAG,kEAAkE,sDAAC,IAAI,OAAO,2FAA2F,8CAA8C,sDAAC,IAAI,OAAO,kGAAkG,yBAAyB,sDAAC,IAAI,OAAO,+DAA+D,kCAAkC,sDAAC,IAAI,OAAO,yEAAyE,+DAA+D,sDAAC,IAAI,OAAO,mHAAmH,0EAA0E,sDAAC,IAAI,OAAO,oIAAoI,4BAA4B,QAAQ,wEAAC,SAAS,4BAA4B,sDAAC,IAAI,OAAO,gGAAgG,cAAc,YAAY,mDAAC,CAAC,qCAAqC,oDAAiG","file":"graphics-editingSupport-js-es2015.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{clone as e}from\"../../core/lang.js\";import{isSome as t}from\"../../core/maybe.js\";import a from\"../../core/Error.js\";import{dataComponents as r}from\"../../core/urlUtils.js\";import{create as s,reject as d}from\"../../core/promiseUtils.js\";import i from\"../../core/Collection.js\";import l from\"../../Graphic.js\";import{normalizeCentralMeridian as n}from\"../../geometry/support/normalizeUtils.js\";function o(e){var t,a;return!0===(null==e||null==(t=e.capabilities)||null==(a=t.operations)?void 0:a.supportsEditing)&&e&&(!(\"editingEnabled\"in e)||e.editingEnabled)}async function u(t,r,l,o){let u,m;const y={edits:l,result:s(((e,t)=>{u=e,m=t}))};t.emit(\"apply-edits\",y);try{const{results:s,edits:m}=await async function(e,t,r,s){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(t))return d(new a(`${e.type}-layer:no-editing-support`,\"Layer source does not support applyEdits capability\",{layer:e}));if(!e.editingEnabled)throw new a(`${e.type}-layer:editing-disabled`,\"Editing is disabled for layer\",{layer:e});const l=await function(e,t,r){const s=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),d=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments);if(!t||!s&&!d)throw new a(`${e.type}-layer:missing-parameters`,\"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required\");if(!e.capabilities.data.isVersioned&&r&&r.gdbVersion)throw new a(`${e.type}-layer:invalid-parameter`,\"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'\");if(!e.capabilities.editing.supportsRollbackOnFailure&&r&&r.rollbackOnFailureEnabled)throw new a(`${e.type}-layer:invalid-parameter`,\"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'\");if(!e.capabilities.editing.supportsGlobalId&&r&&r.globalIdUsed)throw new a(`${e.type}-layer:invalid-parameter`,\"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'\");if(!e.capabilities.editing.supportsGlobalId&&d)throw new a(`${e.type}-layer:invalid-parameter`,\"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'\");if((!r||!r.globalIdUsed)&&d)throw new a(`${e.type}-layer:invalid-parameter`,\"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true\");const l={...t};if(l.addFeatures=t&&i.isCollection(t.addFeatures)?t.addFeatures.toArray():l.addFeatures||[],l.updateFeatures=t&&i.isCollection(t.updateFeatures)?t.updateFeatures.toArray():l.updateFeatures||[],l.deleteFeatures=t&&i.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():l.deleteFeatures||[],l.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new a(`${e.type}-layer:unsupported-operation`,\"Layer does not support adding features.\");if(l.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new a(`${e.type}-layer:unsupported-operation`,\"Layer does not support updating features.\");if(l.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new a(`${e.type}-layer:unsupported-operation`,\"Layer does not support deleting features.\");l.addAttachments=l.addAttachments||[],l.updateAttachments=l.updateAttachments||[],l.deleteAttachments=l.deleteAttachments||[],l.addFeatures=l.addFeatures.map(c),l.updateFeatures=l.updateFeatures.map(c);const o=r&&r.globalIdUsed;return l.addFeatures.forEach((t=>p(t,e,o))),l.updateFeatures.forEach((t=>p(t,e,o))),l.deleteFeatures.forEach((t=>p(t,e,o))),l.addAttachments.forEach((t=>h(t,e))),l.updateAttachments.forEach((t=>h(t,e))),async function(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),s=await n(r),d=t.length,i=a.length;return s.slice(0,d).forEach(((t,a)=>{e.addFeatures[a].geometry=t})),s.slice(d,d+i).forEach(((t,a)=>{e.updateFeatures[a].geometry=t})),e}(l)}(e,r,s);if(!(l.addFeatures.length||l.updateFeatures.length||l.deleteFeatures.length||l.addAttachments.length||l.updateAttachments.length||l.deleteAttachments.length))return{edits:l,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}};return{edits:l,results:await t.applyEdits(l,s)}}(t,r,l,o),y=t=>t.filter((e=>!e.error)).map(e),f={edits:m,addedFeatures:y(s.addFeatureResults),updatedFeatures:y(s.updateFeatureResults),deletedFeatures:y(s.deleteFeatureResults),addedAttachments:y(s.addAttachmentResults),updatedAttachments:y(s.updateAttachmentResults),deletedAttachments:y(s.deleteAttachmentResults)};return(f.addedFeatures.length||f.updatedFeatures.length||f.deletedFeatures.length||f.addedAttachments.length||f.updatedAttachments.length||f.deletedAttachments.length)&&t.emit(\"edits\",f),u(f),s}catch(e){throw m(e),e}}function p(e,r,s){if(s){if(\"attributes\"in e&&!e.attributes[r.globalIdField])throw new a(`${r.type}-layer:invalid-parameter`,\"Feature should have 'globalId' when 'globalIdUsed' is true\");if(!(\"attributes\"in e)&&!e.globalId)throw new a(`${r.type}-layer:invalid-parameter`,\"'globalId' of the feature should be passed when 'globalIdUsed' is true\")}if(\"geometry\"in e&&t(e.geometry)){if(e.geometry.hasZ&&!1===r.capabilities.data.supportsZ)throw new a(`${r.type}-layer:z-unsupported`,\"Layer does not support z values while feature has z values.\");if(e.geometry.hasM&&!1===r.capabilities.data.supportsM)throw new a(`${r.type}-layer:m-unsupported`,\"Layer does not support m values while feature has m values.\")}}function h(e,t){const{feature:s,attachment:d}=e;if(!s||\"attributes\"in s&&!s.attributes[t.globalIdField])throw new a(`${t.type}-layer:invalid-parameter`,\"Attachment should have reference to a feature with 'globalId'\");if(!(\"attributes\"in s)&&!s.globalId)throw new a(`${t.type}-layer:invalid-parameter`,\"Attachment should have reference to 'globalId' of the parent feature\");if(!d.globalId)throw new a(`${t.type}-layer:invalid-parameter`,\"Attachment should have 'globalId'\");if(!d.data&&!d.uploadId)throw new a(`${t.type}-layer:invalid-parameter`,\"Attachment should have 'data' or 'uploadId'\");if(!(d.data instanceof File&&!!d.data.name)&&!d.name)throw new a(`${t.type}-layer:invalid-parameter`,\"'name' is required when attachment is specified as Base64 encoded string using 'data'\");if(!t.capabilities.editing.supportsUploadWithItemId&&d.uploadId)throw new a(`${t.type}-layer:invalid-parameter`,\"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'\");if(\"string\"==typeof d.data){const e=r(d.data);if(e&&!e.isBase64)throw new a(`${t.type}-layer:invalid-parameter`,\"Attachment 'data' should be a Blob, File or Base64 encoded string\")}}function c(e){const t=new l;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}export{u as applyEdits,o as isEditableLayer};\n"],"sourceRoot":"webpack:///"}