{"version":3,"sources":["./node_modules/@arcgis/core/layers/support/ElevationQuery.js","./node_modules/@arcgis/core/layers/support/ElevationSampler.js","./node_modules/@arcgis/core/layers/support/ElevationTile.js"],"names":[],"mappings":"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","file":"support-ElevationQuery-js-es2015.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../core/maybe.js\";import t from\"../../core/Error.js\";import{whenOrAbort as i,all as o,throwIfAbortError as s,eachAlways as l}from\"../../core/promiseUtils.js\";import n from\"../../geometry/Point.js\";import a from\"../../geometry/Multipoint.js\";import r from\"../../geometry/Polyline.js\";import{result as c}from\"../../core/asyncUtils.js\";import{getMetersPerUnitForSR as u}from\"../../core/unitUtils.js\";import{fromExtent as h,create as p,contains as m}from\"../../geometry/support/aaBoundingRect.js\";import{initializeProjection as f,project as d}from\"../../geometry/projection.js\";import{MultiTileElevationSampler as y}from\"./ElevationSampler.js\";import{ElevationTile as T}from\"./ElevationTile.js\";class v{async queryAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const s=x.fromGeometry(i);let l=!1;o&&o.returnSampleInfo||(l=!0);const n={...R,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,n),r=await this._queryAllContinue(e,a,n);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const s={...R,...o},l=new w(e,i.spatialReference,s),n=s.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,i,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,l,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,n=e.tileInfo.spatialReference;l.equals(n)||(await f([{source:l,dest:n}],{signal:s}),t=d(t,n));const a=new _(e,t,i,o);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new y(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.map((e=>h(e.extent))),l=await this._createSampler(e[e.length-1],t,o,s);if(0===l.samplers.length)return i;const n=i.samplers.concat(l.samplers),a=new y(n,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,i){const o=e.pop(),s=t.geometry.coordinates,l=[],n=[];for(let i=0;i<s.length;i++){const a=t.sampleInfo[i];a.demResolution>=0?a.source||(a.source=o):e.length&&(l.push(s[i]),n.push(i))}if(!e.length||0===l.length)return t;const a=t.geometry.clone(l),r=await this.query(e[e.length-1],a,i);return n.forEach(((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}async _createGeometryDescriptor(e,i,o){let s;const l=e.layer.tileInfo.spatialReference;if(i instanceof x?s=await i.project(l,o):(await f([{source:i.spatialReference,dest:l}],{signal:o}),s=d(i,l)),!s)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=x.fromGeometry(s)}async _selectTiles(e,i){const o=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof o)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===o)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==o)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${o}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){const t=new T(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const o=e.x,s=e.y;(o<i.xmin||o>i.xmax||s<i.ymin||s>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/u(e.spatialReference);let o=e.lods[0],s=0;for(let t=1;t<e.lods.length;t++){const l=e.lods[t];Math.abs(l.resolution-i)<Math.abs(o.resolution-i)&&(o=l,s=t)}return s}async _selectTilesFinestContiguous(e,t){const i=E(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,l,n){const a=e.layer;if(e.selectTilesAtLOD(l),l<0)return;const r=a.tilemapCache,c=e.getTilesToFetch();try{if(r)await i(o(c.map((e=>r.fetchAvailability(e.level,e.row,e.col,{signal:n})))),n);else if(await this._populateElevationTiles(e,n),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(t){s(t),await this._selectTilesFinestContiguousAt(e,l-1,n)}}async _populateElevationTiles(t,o){const s=t.getTilesToFetch(),n={},a=t.options.cache,r=t.options.noDataValue,c=s.map((async i=>{const s=`${t.layer.uid}:${i.id}:${r}`,l=e(a)?a.get(s):null,c=e(l)?l:await t.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:o});e(a)&&a.put(s,c),n[i.id]=new T(i,c)}));await i(l(c),o),t.populateElevationTiles(n)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const l=e.layer.tilemapCache;if(!l)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),a={},r=n.map((async e=>{const i={id:null,level:0,row:0,col:0,extent:p()},o=await c(l.fetchAvailabilityUpsample(e.level,e.row,e.col,i,{signal:t}));!1===o.ok?s(o.error):a[e.id]=i}));await i(o(r),t),e.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{e.id in o?o[e.id]++:(o[e.id]=1,i++)},l=e=>{const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,l);let n=!0;for(;n&&(n=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(n=!0),s(o))}),l),n););}_selectTilesAutoFinest(e){const t=E(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let o=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);void 0!==e?o=e:t.elevationTile=null}t.z=o}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=u(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){s=t.lodAt(o.elevationTile.tile.level).resolution*i}return{demResolution:s}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await f([{source:this.spatialReference,dest:e}],{signal:t});const i=new a({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=d(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=this._cloneCoordinate(e),s=o.points[t];return i.x=s[0],i.y=s[1],i})),l=this.clone(s);return l.spatialReference=e,l}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>t._cloneCoordinate(e))),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case\"point\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:o?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new n(t[0].x,t[0].y,t[0].z,t[0].m,i):new n(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>({x:e[0],y:e[1],z:e[2],m:e[3]}))):o?i.points.map((e=>({x:e[0],y:e[1],z:e[2]}))):s?i.points.map((e=>({x:e[0],y:e[1],m:e[2]}))):i.points.map((e=>({x:e[0],y:e[1]}))),t._exporter=(t,i)=>e.hasM?new a({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new a(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,o=[],s=[],{hasZ:l,hasM:n}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,l&&n)for(const t of e)o.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(l)for(const t of e)o.push({x:t[0],y:t[1],z:t[2]});else if(n)for(const t of e)o.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)o.push({x:t[0],y:t[1]});t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=s.map((e=>o.slice(e[0],e[1])));return new r({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t){this.layer=e,this.options=t}}class w extends g{constructor(e,t,i){super(e,i),this.type=\"geometry\",this.outSpatialReference=t}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;i.elevationTile||!i.tile||e[o.id]||(e[o.id]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class _ extends g{constructor(e,t,i,o){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;for(let o=t.lods.length-1;o>=0;o--){const s=t.lods[o],l=s.resolution*t.size[0],n=s.resolution*t.size[1];if(Math.ceil(i.width/l)*Math.ceil(i.height/n)<=e)return o}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},o=[];for(const s of e)i[s.id]?t&&t(s):(i[s.id]=s,o.push(s));const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++)if(m(s[o].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.layer.tileInfo,i=t.lods[e],o=this.extent,s=t.tileAt(i.level,o.xmin,o.ymin),l=i.resolution*t.size[0],n=i.resolution*t.size[1],a=Math.ceil((o.xmax-s.extent[0])/l),r=Math.ceil((o.ymax-s.extent[1])/n);for(let e=0;e<r;e++)for(let i=0;i<a;i++){const o={id:null,level:s.level,row:s.row-e,col:s.col+i};t.updateTileInfo(o),this._tileIsMasked(o)||this.candidateTiles.push(o)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>m(t,e.extent)))}}function E(e,t){let i=e.lods.length-1;if(t>0){const o=e.lods.findIndex((e=>e.resolution<t));0===o?i=0:o>0&&(i=o-1)}return i}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export default v;export{v as ElevationQuery,x as GeometryDescriptor,E as getFinestLodIndex};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport\"../../core/has.js\";import e from\"../../core/Logger.js\";import{canProject as t,project as n}from\"../../geometry/support/webMercatorUtils.js\";import s from\"../../geometry/Point.js\";import{extentContainsPoint as i}from\"../../geometry/support/contains.js\";import\"../../geometry.js\";import{getMetersPerUnitForSR as o}from\"../../core/unitUtils.js\";import{toExtent as r,create as a}from\"../../geometry/support/aaBoundingRect.js\";const l=e.getLogger(\"esri.layers.support.ElevationSampler\");class c{queryElevation(e){return u(e.clone(),this)}on(){return x}projectIfRequired(e,t){return h(e,t)}}class m extends c{constructor(e,t,n){super(),this.tile=e,this.noDataValue=n,this.extent=r(e.tile.extent,t.spatialReference);const s=o(t.spatialReference),i=t.lodAt(e.tile.level).resolution*s;this.demResolution={min:i,max:i}}get spatialReference(){return this.extent.spatialReference}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return i(this.extent,t)}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;if(!this.contains(e)){const t=this.extent,n=`${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax}`;l.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${n})`)}return this.tile.sample(t.x,t.y)}}class p extends c{constructor(e,t,n){let s;super(),\"number\"==typeof t?(this.noDataValue=t,s=null):(s=t,this.noDataValue=n),this.samplers=s?e.map((e=>new m(e,s,this.noDataValue))):e;const i=this.samplers[0];if(i){this.extent=i.extent.clone();const{min:e,max:t}=i.demResolution;this.demResolution={min:e,max:t};for(let e=1;e<this.samplers.length;e++){const t=this.samplers[e];this.extent.union(t.extent),this.demResolution.min=Math.min(this.demResolution.min,t.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,t.demResolution.max)}}else this.extent=r(a(),s.spatialReference),this.demResolution={min:0,max:0}}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const e of this.samplers)if(e.contains(t))return e.elevationAt(t);return l.warn(\"#elevationAt()\",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),null}}function u(e,t){const n=h(e,t.spatialReference);if(!n)return null;switch(e.type){case\"point\":!function(e,t,n){e.z=n.elevationAt(t)||0}(e,n,t);break;case\"polyline\":!function(e,t,n){f.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.paths.length;i++){const o=e.paths[i],r=t.paths[i];for(let e=0;e<o.length;e++){const t=o[e],i=r[e];f.x=i[0],f.y=i[1];const a=n.elevationAt(f)||0;s&&(t[3]=t[2]),t[2]=a}}e.hasZ=!0}(e,n,t);break;case\"multipoint\":!function(e,t,n){f.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.points.length;i++){const o=e.points[i],r=t.points[i];f.x=r[0],f.y=r[1];const a=n.elevationAt(f)||0;s&&(o[3]=o[2]),o[2]=a}e.hasZ=!0}(e,n,t)}return e}function h(e,s){const i=e.spatialReference;return i.equals(s)?e:t(i,s)?n(e,s):(l.error(`Cannot project geometry spatial reference (wkid:${i.wkid}) to elevation sampler spatial reference (wkid:${s.wkid})`),null)}const f=new s,x={remove(){}};export{c as ElevationSamplerBase,p as MultiTileElevationSampler,m as TileElevationSampler,u as updateGeometryElevation};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nclass t{constructor(t,a){if(this.tile=t,!a)return void(this.samplerData=null);const e=this.tile.extent;this.samplerData={pixelData:a.values,width:a.width,height:a.height,safeWidth:.99999999*(a.width-1),noDataValue:a.noDataValue,dx:(a.width-1)/(e[2]-e[0]),dy:(a.width-1)/(e[3]-e[1]),x0:e[0],y1:e[3]}}sample(t,e){if(this.samplerData)return function(t,e,i){const{safeWidth:h,width:r,pixelData:s,noDataValue:l}=t,n=a(t.dy*(t.y1-i),0,h),o=a(t.dx*(e-t.x0),0,h),d=Math.floor(n),u=Math.floor(o),f=d*r+u,p=f+r,x=s[f],D=s[p],c=s[f+1],w=s[p+1];if(x!==l&&D!==l&&c!==l&&w!==l){const t=o-u,a=x+(c-x)*t;return a+(D+(w-D)*t-a)*(n-d)}return}(this.samplerData,t,e)}}function a(t,a,e){return t<a?a:t>e?e:t}export default t;export{t as ElevationTile};\n"],"sourceRoot":"webpack:///"}