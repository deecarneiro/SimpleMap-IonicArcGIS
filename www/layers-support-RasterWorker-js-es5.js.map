{"version":3,"sources":["webpack:///node_modules/@arcgis/core/layers/support/RasterWorker.js"],"names":["r","data","options","t","toJSON","o","pixelBlock","fromJSON","extent","s","symbolizer","symbolize","symbolizerJSON","histograms","rendererJSON","type","simpleStretch","srcPixelBlock","stretchParams","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","srcMosaicSize","coefs","destDimension","sampleSpacing","interpolation"],"mappings":"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","file":"layers-support-RasterWorker-js-es5.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{resolve as r}from\"../../core/promiseUtils.js\";import t from\"../../geometry/Extent.js\";import\"../../geometry.js\";import e from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as s,split as i,mosaic as m,approximateTransform as l}from\"./rasterFunctions/pixelUtils.js\";import n from\"../../renderers/support/RasterSymbolizer.js\";export default class{async decode(r){const t=await o(r.data,r.options);return t&&t.toJSON()}symbolize(o){o.pixelBlock=e.fromJSON(o.pixelBlock),o.extent=o.extent?t.fromJSON(o.extent):null;const s=this.symbolizer.symbolize(o);return r(s&&s.toJSON())}async updateSymbolizer(r){var t;this.symbolizer=n.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===(null==(t=this.symbolizer)?void 0:t.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(t){const o=this.symbolizer.simpleStretch(e.fromJSON(t.srcPixelBlock),t.stretchParams);return r(o&&o.toJSON())}estimateStatisticsHistograms(t){const o=s(e.fromJSON(t.srcPixelBlock));return r(o)}split(t){const o=i(e.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel);return o&&o.forEach(((r,t)=>{o.set(t,null==r?void 0:r.toJSON())})),r(o)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),o=m(t,r.srcMosaicSize);if(!r.coefs)return o&&o.toJSON();const s=l(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation);return s&&s.toJSON()}}\n"]}